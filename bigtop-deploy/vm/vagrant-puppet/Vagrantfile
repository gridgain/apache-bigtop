# -*- mode: ruby -*-
# vi: set ft=ruby :

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  vmbox = "puppetlab-centos-64-nocm"

  # Repository
  # Example for testing a Release candidate.
  repo = "http://bigtop01.cloudera.org:8080/view/Releases/job/Bigtop-0.8.0/label=centos6/6/artifact/output/"
  # repo = "http://bigtop.s3.amazonaws.com/releases/0.7.0/redhat/6/x86_64"

  # Virtual box implementation
  vmboxurl = "http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box"

  # number of instances
  num_instances = 1

  # manage /etc/hosts by hostmanager plugin(https://github.com/smdahlen/vagrant-hostmanager)
  # use vagrant-cachier to cache packages at local(https://github.com/fgrehm/vagrant-cachier)
  if Vagrant.has_plugin?("vagrant-hostmanager")
    config.hostmanager.enabled = true
  end

  # use vagrant-cachier to cache packages at local(https://github.com/fgrehm/vagrant-cachier)
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  # declare the variable first, will be override in following loop
  bigtop_master = ""

  # nodes definition
  (1..num_instances).each do |i|
    config.vm.define "bigtop#{i}" do |bigtop|

      bigtop.vm.box = vmbox
      bigtop.vm.box_url = vmboxurl
      bigtop_hostname="bigtop#{i}.vagrant"
      bigtop_ip="10.10.10.1#{i}"
      if "#{i}" == "1"
        bigtop_master = bigtop_hostname
      end

      bigtop.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", "10024"]
      end

      bigtop.vm.network :private_network, ip: bigtop_ip
      bigtop.vm.hostname = bigtop_hostname

      # three levels up is the bigtop "home" directory.
      # the current directory has puppet recipes which we need for provisioning.
      bigtop.vm.synced_folder "../../../", "/bigtop-home"

      # shell provisioner to setup basic vm environment
      bigtop.vm.provision :shell do |shell|
        shell.path = "provision.sh"
        shell.args = [ bigtop_master , repo ]
      end

      bigtop.vm.provision :hostmanager

      # deploy Apache Hadoop and it's ecosystem
      bigtop.vm.provision :puppet do |puppet|
        puppet.module_path = "../../puppet/modules/"
        puppet.manifests_path =  "../../puppet/manifests/"
        puppet.manifest_file  = "site.pp"
	puppet.options = "--debug --confdir=/bigtop-home/bigtop-deploy/puppet/"
      end

      if i==num_instances then
	puts "creating provisioner directive for running tests"
        bigtop.vm.provision "shell", path: "smoke-tests.sh"
      else
        puts "Not creating provisioner directive for tests yet... only on vm #{i} of #{num_instances}"
      end

    end
  end

end
